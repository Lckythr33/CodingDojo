package com.ztech.logandreg.controllers;

import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpSession;
import javax.validation.Valid;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.ztech.logandreg.models.Event;
import com.ztech.logandreg.models.User;
import com.ztech.logandreg.services.UserService;
import com.ztech.logandreg.validator.UserValidator;

@Controller
public class UserCtrl {
    private final UserService userService;
    
    // NEW
    private final UserValidator userValidator;
    
    // NEW
    public UserCtrl(UserService userService, UserValidator userValidator) {
        this.userService = userService;
        this.userValidator = userValidator;
    }
    
    
    @GetMapping("/")
    public String index() {
    	return "redirect:/registration";
    }
    
    @RequestMapping("/registration")
    public String registerForm(@ModelAttribute("user") User user) {
        return "registrationPage.jsp";
    }
    @RequestMapping("/login")
    public String login() {
        return "registrationPage.jsp";
    }
    
    @RequestMapping(value="/registration", method=RequestMethod.POST)
    public String registerUser(@Valid @ModelAttribute("user") User user, BindingResult result, HttpSession session, Model model) {
    	userValidator.validate(user, result);
        // if result has errors, return the registration page (don't worry about validations just now)
    	if(result.hasErrors()) {
    		return "registrationPage.jsp";
    
    	}
        // else, save the user in the database, save the user id in session, and redirect them to the /home route
    	User u = userService.registerUser(user);
    	session.setAttribute("userId", u.getId()); // add users ID to session
    	return "redirect:/home";
    }
    
    @RequestMapping(value="/login", method=RequestMethod.POST)
    public String loginUser(@RequestParam("email") String email, @RequestParam("password") String password, Model model, @ModelAttribute("user") User user, HttpSession session) {
		// if the user is authenticated, save their user id in session
		boolean isAuth = userService.authenticateUser(email, password);
		if(isAuth) {
			User u = userService.findByEmail(email);
			session.setAttribute("userId", u.getId()); 
			return "redirect:/home";
		}
        // else, add error messages and return the login page
		model.addAttribute("error", "Invalid Credentials!");
		return "registrationPage.jsp";
    }
    
    @GetMapping("/home")
    public String home(HttpSession session, Model model, @Valid @ModelAttribute("eventObj") Event event) {
		Long userId = (Long) session.getAttribute("userId");
		if(session.getAttribute("userId") == null) {
			return "redirect:/";
		}
		else {
        // get user from session, save them in the model and return the home page
		User u = userService.findUserById(userId);
		model.addAttribute("user", u);
		List<Event> events = userService.allEvents();
		model.addAttribute("allEvents", events);
		return "homePage.jsp";
    }
  }
    
    @RequestMapping("/logout")
    public String logout(HttpSession session) {
        // invalidate session
    	session.invalidate();
        // redirect to login page
    	return "redirect:/registration";
    }
    
    //Event Ctrl
	
	@PostMapping("/events")
	public String addEvent(Model model, @Valid @ModelAttribute("eventObj") Event event, BindingResult result, HttpSession session) {
		Long userId = (Long) session.getAttribute("userId");
        // get user from session, save them in the model and return the home page
		User u = userService.findUserById(userId);
		model.addAttribute("user", u);
		
		Date today = new Date();
    	if(event.getDate() == null || event.getDate().before(today)) {
    		result.rejectValue("date", "Past");
    	}
		
		if(result.hasErrors()) {
			return "homePage.jsp";
		}
		else {	
			userService.createEvent(event);
			return "redirect:/home";	
		}
}
}
		

    	